#!/bin/bash

# Color definitions
RED="\e[31m"
GREEN="\e[32m"
YELLOW="\e[33m"
BLUE="\e[34m"
CYAN="\e[36m"
NC="\e[0m" # No Color

# Log file
LOGFILE=~/emuinabox_install.log
exec > >(tee -i "$LOGFILE")
exec 2>&1

# ASCII Art Function
function show_ascii_art {
    echo -e "${BLUE}"
    echo "___________            __________              "
    echo "\_   _____/ _____  __ _\______   \ _______  ___"
    echo " |    __)_ /     \|  |  \    |  _//  _ \  \/  /"
    echo " |        \  Y Y  \  |  /    |   (  <_> >    < "
    echo "/_______  /__|_|  /____/|______  /\____/__/\_ \\"
    echo "        \/      \/             \/            \/ "
    echo -e "${NC}"
}

# Progress spinner function
function spinner {
    local pid=$!
    local delay=0.1
    local spinstr='|/-\\'
    while kill -0 $pid 2>/dev/null; do
        local temp=${spinstr#?}
        printf " [%c]  " "$spinstr"
        spinstr=$temp${spinstr%"$temp"}
        sleep $delay
        printf "\b\b\b\b\b\b"
    done
    printf "    \b\b\b\b"
}

# Package installation function with colored output
function install_package {
    echo -e "${YELLOW}Installing $1...${NC}"
    if apt-get install -y "$1" &>/dev/null; then
        echo -e "${GREEN}Installed $1 successfully${NC}"
    else
        echo -e "${RED}Failed to install $1${NC}"
        exit 1
    fi
}

# Start of the installation screen
function installation_notice {
    show_ascii_art
    echo -e "${BLUE}--------------------------------------------------${NC}"
    echo -e "${CYAN}      Welcome to the EmuBox Installation!${NC}"
    echo -e "${BLUE}--------------------------------------------------${NC}"
    echo -e "${YELLOW}>> Installing essential packages...${NC}"
    echo -e "${YELLOW}>> Please wait while we set everything up!${NC}"
    echo -e "${BLUE}--------------------------------------------------${NC}"
}

# Start the script
rm -f ~/x

# Update package repository
echo -e "${YELLOW}Updating package repository...${NC}"
apt-get update &>/dev/null

# Install wget first
install_package wget

# Install termux-am
installation_notice
install_package termux-am

# Set up storage
echo -n -e "${YELLOW}Setting up storage...${NC}"
termux-setup-storage & spinner
sleep 4

# Wait for storage access
while [ ! -d ~/storage/shared ]; do
    echo -e "${RED}Waiting for storage access...${NC}"
    sleep 3
done
echo -e "${GREEN}Storage setup complete${NC}"

# List of packages to install
packages=(
    x11-repo
    pulseaudio
    xwayland
    tsu
    root-repo
    patchelf
    p7zip
    xorg-xrandr
    ncurses-utils
    hashdeep
    termux-x11-nightly
    htop
    git
    vim
    python
    neofetch
    openssh
    curl
    unzip
    zip
)

# Install packages
for pkg in "${packages[@]}"; do
    install_package "$pkg"
done

# Remove previous glibc installation if present
if [ -e "$PREFIX/glibc" ]; then
    read -p "${YELLOW}Previous glibc installation found. Remove it? (Y/n)${NC} " -n 1 -r
    echo
    [[ $REPLY =~ ^[Yy]$ ]] && rm -rf "$PREFIX/glibc" && echo -e "${GREEN}Previous glibc removed.${NC}" || echo -e "${RED}Skipping glibc removal.${NC}"
fi

# Install EmuBox - User input for version selection
INSTALL_WOW64=0
while true; do
    echo -e "${YELLOW}Select an option:${NC}"
    echo -e "${BLUE}1)${NC} Install previous EmuBox version with box86"
    echo -e "${BLUE}2)${NC} Install new EmuBox WOW64 version"
    read -p "${YELLOW}Selected number: ${NC}" i
    case "$i" in
        1) INSTALL_WOW64=0; break ;;
        2) INSTALL_WOW64=1; break ;;
        *) echo -e "${RED}Invalid option! Please select 1 or 2.${NC}" ;;
    esac
done

# Function to download from GitHub with retries
function wget_github {
    wget -q --retry-connrefused --tries=0 "https://raw.githubusercontent.com/YashSoPro/emuinabox_packages/main/$1" -O "$2"
    return $?
}

# Install EmuBox
echo -e "${BLUE}Installing EmuBox...${NC}"
mkdir -p "$PREFIX/glibc/opt/package-manager/installed"

# Download the package-manager script
if ! wget_github "package-manager" "$PREFIX/glibc/opt/package-manager/package-manager"; then
    echo -e "${RED}Download failed${NC}"
    exit 1
fi

# Load the package manager script
source "$PREFIX/glibc/opt/package-manager/package-manager"

# Synchronize and install Wine packages
sync-all
if [ "$INSTALL_WOW64" = "1" ]; then
    sync-package wine-9.3-vanilla-wow64
else
    sync-package wine-ge-custom-8-25
fi

# Create a symbolic link to start the program by typing "emu-in-a-box"
ln -sf "$PREFIX/glibc/opt/scripts/mobox" "$PREFIX/bin/emuinabox"
echo -e "${GREEN}Installation complete! To start emuinabox, type \"emuinabox\"${NC}"
