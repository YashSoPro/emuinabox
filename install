#!/bin/bash

rm ~/x

echo "Storage Setup... please don't close the app"
pkg install termux-am -y &>/dev/null

termux-setup-storage & sleep 4 &>/dev/null

while true; do
    if [ -d ~/storage/shared ]; then
        break
    else
        echo "Storage permission denied"
    fi
    sleep 3
done

echo "Installing termux libraries"
apt-get clean
echo "Updating package manager..."
apt-get update
if [ $? -ne 0 ]; then
    echo "Failed to update package manager. Check your network connection."
    exit 1
fi

apt-get -y --with-new-pkgs -o Dpkg::Options::="--force-confdef" upgrade
if [ $? -ne 0 ]; then
    echo "Failed to upgrade packages."
    exit 1
fi

pkg install x11-repo -y &>/dev/null
pkg install pulseaudio -y &>/dev/null
pkg install xwayland -y &>/dev/null
pkg install tsu -y &>/dev/null
pkg install root-repo -y &>/dev/null
pkg install patchelf -y &>/dev/null
pkg install p7zip -y &>/dev/null
pkg install xorg-xrandr -y &>/dev/null
pkg install ncurses-utils -y &>/dev/null
pkg install hashdeep -y &>/dev/null

# Installing wget
pkg install wget -y &>/dev/null
if [ $? -ne 0 ]; then
    echo "Failed to install wget."
    exit 1
fi

# Installing gaming-related libraries
echo "Installing gaming libraries"
pkg install mesa -y &>/dev/null
pkg install vulkan-utils -y &>/dev/null
pkg install glx-utils -y &>/dev/null
pkg install libinput -y &>/dev/null
pkg install joystick -y &>/dev/null
pkg install alsa-lib -y &>/dev/null
pkg install pipewire -y &>/dev/null
pkg install wine-staging -y &>/dev/null
pkg install winetricks -y &>/dev/null
pkg install gamemode -y &>/dev/null
pkg install cpufrequtils -y &>/dev/null
pkg install dxvk -y &>/dev/null
pkg install lutris -y &>/dev/null
pkg install steamcmd -y &>/dev/null

if [ -e $PREFIX/glibc ]; then
    echo -n "Removing previous glibc. Continue? (Y/n) "
    read i
    if [ "$i" = "Y" ] || [ "$i" = "y" ]; then
        rm -rf $PREFIX/glibc
    else
        exit 1
    fi
fi

INSTALL_WOW64=0

echo "Select an option"
echo "1) Install previous emuinabox with box86"
echo "2) Install new emuinabox wow64 version"
echo ""
echo -n "Selected number: "
read i
case "$i" in
1)
    INSTALL_WOW64=0
;;
2)
    INSTALL_WOW64=1
;;
*)
    exit 1
;;
esac

echo "Installing emuinabox"

function wget-git-q {
    wget -q --retry-connrefused --tries=0 --header "PRIVATE-TOKEN: $PRIVATE_TOKEN" "https://gitlab.com/api/v4/projects/$PROJECT_ID/repository/files/$1/raw?ref=main" -O $2
    return $?
}

echo "Updating package manager"
mkdir -p $PREFIX/glibc/opt/package-manager/installed

if [ "$INSTALL_WOW64" = "1" ]; then
    echo "PRIVATE_TOKEN=glpat-h5r7HjKoPKZPxmfg79xs
    PROJECT_ID=54240888" >$PREFIX/glibc/opt/package-manager/token
else
    echo "PRIVATE_TOKEN=glpat-Xs4HfrCkMpbedkPycqzP
    PROJECT_ID=52465323" >$PREFIX/glibc/opt/package-manager/token
fi

. $PREFIX/glibc/opt/package-manager/token
if ! wget-git-q "package-manager" "$PREFIX/glibc/opt/package-manager/package-manager"; then
    echo "Download failed"
    exit 1
fi
. $PREFIX/glibc/opt/package-manager/package-manager
sync-all

if [ "$INSTALL_WOW64" = "1" ]; then
    sync-package wine-9.3-vanilla-wow64
else
    sync-package wine-ge-custom-8-25
fi

ln -sf $PREFIX/glibc/opt/scripts/emuinabox $PREFIX/bin/emuinabox
echo "To start - type \"emuinabox\""

# Ajay Mobox Patch v1.1 Installation
echo "Installing Ajay Mobox Patch v1.1"
cd ~/storage/shared
wget https://github.com/ajay9634/mobox_patch/releases/download/1.1/Ajay.mobox.patch.v1.1.7z

# Extract the patch
7z x Ajay.mobox.patch.v1.1.7z -o~/emuinabox_patch

# Navigate to the extracted directory
cd ~/emuinabox_patch || { echo "Failed to navigate to emuinabox_patch"; exit 1; }

# Check for the correct batch file and execute it
if [ -f "install Ajay Mobox patch.bat" ]; then
    chmod +x "install Ajay Mobox patch.bat"
    echo "Running patch installation..."
    ./install\ Ajay\ Mobox\ patch.bat
else
    echo "Batch file not found: install Ajay Mobox patch.bat"
    exit 1
fi
