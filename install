#!/bin/bash

# Function to print colored text
color_text() {
    echo -e "\033[1;${1}m${2}\033[0m"
}

# Decorative header
color_text 36 "=========================="
color_text 32 "       EmuInABox Installer "
color_text 36 "=========================="

# Clear previous script files
rm ~/x

# Install termux-am
color_text 33 "Installing termux-am..."
pkg install termux-am -y &>/dev/null

termux-setup-storage & sleep 4 &>/dev/null

while true; do
    if [ -d ~/storage/shared ]; then
        break
    else
        color_text 31 "Storage permission denied. Retrying..."
    fi
    sleep 3
done

# Update package manager
color_text 33 "Installing termux packages..."
apt-get clean
apt-get update >/dev/null 2>&1
apt-get -y --with-new-pkgs -o Dpkg::Options::="--force-confdef" upgrade >/dev/null 2>&1

# List of essential packages
packages=(
    x11-repo
    pulseaudio
    xwayland
    wget
    tsu
    root-repo
    patchelf
    p7zip
    xorg-xrandr
    ncurses-utils
    hashdeep
    termux-x11-nightly
)

for pkg in "${packages[@]}"; do
    color_text 34 "Installing $pkg..."
    pkg install "$pkg" -y &>/dev/null
done

# Check for previous glibc
if [ -e $PREFIX/glibc ]; then
    color_text 33 "Removing previous glibc. Continue? (Y/n)"
    read -r i
    if [ "$i" = "Y" ] || [ "$i" = "y" ]; then
        rm -rf $PREFIX/glibc
    else
        exit 1
    fi
fi

INSTALL_WOW64=0

# User selection for installation type
color_text 33 "Select an option"
color_text 32 "1) Install previous EmuInABox with box86"
color_text 32 "2) Install new EmuInABox wow64 version"
echo ""
color_text 33 "Selected number: "
read -r i
case "$i" in
1)
    INSTALL_WOW64=0
    ;;
2)
    INSTALL_WOW64=1
    ;;
*)
    exit 1
    ;;
esac

color_text 33 "Installing EmuInABox..."

# Function to download files
function wget-git-q {
    wget -q --retry-connrefused --tries=0 --header "PRIVATE-TOKEN: $PRIVATE_TOKEN" "https://gitlab.com/api/v4/projects/$PROJECT_ID/repository/files/$1/raw?ref=main" -O $2
    return $?
}

color_text 33 "Updating package manager"
mkdir -p $PREFIX/glibc/opt/package-manager/installed

if [ "$INSTALL_WOW64" = "1" ]; then
    echo "PRIVATE_TOKEN=glpat-h5r7HjKoPKZPxmfg79xs
PROJECT_ID=54240888" > $PREFIX/glibc/opt/package-manager/token
else
    echo "PRIVATE_TOKEN=glpat-Xs4HfrCkMpbedkPycqzP
PROJECT_ID=52465323" > $PREFIX/glibc/opt/package-manager/token
fi

. $PREFIX/glibc/opt/package-manager/token

if ! wget-git-q "package-manager" "$PREFIX/glibc/opt/package-manager/package-manager"; then
    color_text 31 "Download failed"
    exit 1
fi

. $PREFIX/glibc/opt/package-manager/package-manager
sync-all

if [ "$INSTALL_WOW64" = "1" ]; then
    sync-package wine-9.3-vanilla-wow64
else
    sync-package wine-ge-custom-8-25
fi

# Create the emuinabox script with actual functionality
cat << 'EOF' > $PREFIX/glibc/opt/scripts/emuinabox
#!/bin/bash
# Actual commands to start the EmuInABox application

# Example command to start an emulator or any application
# Replace this with the actual command you want to execute
echo "Launching EmuInABox..."

# Add your emulator launch command here, e.g.:
# ./path/to/emulator --option

# Placeholder for the actual functionality
echo "Emulator started successfully!"
EOF
chmod +x $PREFIX/glibc/opt/scripts/emuinabox

ln -sf $PREFIX/glibc/opt/scripts/emuinabox $PREFIX/bin/emuinabox
color_text 32 "Setup Complete! To start, type 'emuinabox'"
color_text 36 "=========================="
