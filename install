#!/bin/bash

# ASCII art header
echo -e "\033[1;33m"
cat << "EOF"
___________            __________              
\_   _____/ _____  __ _\______   \ _______  ___
 |    __)_ /     \|  |  \    |  _//  _ \  \/  /
 |        \  Y Y  \  |  /    |   (  <_> >    < 
/_______  /__|_|  /____/|______  /\____/__/\_ \
        \/      \/             \/             \/ 
EOF
echo -e "\033[0m"

# Clean any previous setup
rm -f ~/x

# Function to install packages
install_packages() {
    echo "Installing packages: $@"
    pkg install -y "$@"
}

# Install essential packages
install_packages termux-am x11-repo pulseaudio xwayland wget tsu root-repo patchelf p7zip xorg-xrandr ncurses-utils hashdeep termux-x11-nightly

# Set up storage permissions
termux-setup-storage & 
timeout=30
while [ $timeout -gt 0 ] && [ ! -d ~/storage/shared ]; do
    echo "Waiting for storage permission... ($timeout seconds left)"
    sleep 1
    ((timeout--))
done

if [ ! -d ~/storage/shared ]; then
    echo "Storage permission denied. Exiting."
    exit 1
fi

# Update and upgrade packages
echo "Updating and upgrading packages"
apt-get clean
apt-get update -y >/dev/null
apt-get -y --with-new-pkgs -o Dpkg::Options::="--force-confdef" upgrade >/dev/null

# Remove previous glibc if present
if [ -e $PREFIX/glibc ]; then
    read -p "Removing previous glibc. Continue? (Y/n) " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        rm -rf $PREFIX/glibc
    else
        echo "Operation cancelled."
        exit 1
    fi
fi

# Select installation option
echo "Select an option:"
echo "1) Install previous emuinabox with box86"
echo "2) Install new emuinabox wow64 version"
read -p "Selected number: " option

case $option in
    1) INSTALL_WOW64=0 ;;
    2) INSTALL_WOW64=1 ;;
    *) echo "Invalid option. Exiting."; exit 1 ;;
esac

# Installing emuinabox
echo "Installing emuinabox"

# Create required directory
mkdir -p $PREFIX/glibc/opt/package-manager/installed

# Set the private token and project id
if [ "$INSTALL_WOW64" = "1" ]; then
    echo "PRIVATE_TOKEN=glpat-h5r7HjKoPKZPxmfg79xs
PROJECT_ID=54240888" > $PREFIX/glibc/opt/package-manager/token
else
    echo "PRIVATE_TOKEN=glpat-Xs4HfrCkMpbedkPycqzP
PROJECT_ID=52465323" > $PREFIX/glibc/opt/package-manager/token
fi

# Load token
source $PREFIX/glibc/opt/package-manager/token

# Download and install package-manager script
curl -sSL https://raw.githubusercontent.com/YashSoPro/emuinabox_packages/main/package-manager -o "$PREFIX/glibc/opt/package-manager/package-manager"

# Execute the package manager to set up everything emuinabox-related
source $PREFIX/glibc/opt/package-manager/package-manager

# Install Wine
if [ "$INSTALL_WOW64" = "1" ]; then
    sync-package wine-9.3-vanilla-wow64
else
    sync-package wine-ge-custom-8-25
fi

# Create symlinks for both 'emuinabox' and 'mobox'
ln -sf $PREFIX/glibc/opt/scripts/mobox $PREFIX/bin/emuinabox
ln -sf $PREFIX/glibc/opt/scripts/mobox $PREFIX/bin/mobox

# Completion message
echo -e "\033[1;32m--------------------------------------------------"
echo "Emuinabox installation complete!"
echo "To start, type 'emuinabox'!"
echo -e "--------------------------------------------------\033[0m"
